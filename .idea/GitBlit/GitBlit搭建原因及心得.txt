  昨天搭建好GitLab之后发现怎么和我以前公司使用的Git协同开发版本仓库不一样?.....网上一查....原来我们以前使用的是GitBlit.....我一直以为是GitLab..于是就开始了GitBlit搭建之旅:

    1.首先说下GitBlit和GitLab的区别吧.
    (1)GitBlit体积小单文件部署,GitLab体积巨大;GitBlit有中文版本,不用像GitLab还要汉化.(汉化的时候一定要注意汉化包版本要高于GitLab版本).
    (2)GitLab可以在线编辑,而GitBlit不行
    (3)GitBlit使用java语言编写,GitLab使用ruby语言编写.
    (4)GitLab支持邮件通知,而GitBlit不支持.
    (5)GitBlit没有项目统计,GitLab有.
    (6)GitBlit免费,GitLab-ce免费,GitLab-ee收费.
    
    2.搭建过程.
     1.首先是github上下载的文件,修改ubuntu-servcei配置文件,配置各个端口.再修改gitblit配置文件,配置项目路径等等.使用java -jar 部署giblit.jar.使用127.0.0.1:8080可以访问主页,
       使用admin/admin登录后配置.
     2.使用docker搭建,使用docker搭建就没有这么多事情了,先就是docker search gitblit选一个新点的景象,然后pull,run,端口映射这些参数写好,都是docker的基本操作,就不再赘述.启动后
       访问主页,登录方式同上.(docker还是好用呀,没这么多事情,找文件配路径啥的,也没啥兼容性问题).
     3.在gitblit上使用管理员创建了版本仓库,创建了两个用户,都添加到测试版本库Group.fle在ubuntu虚拟机中提交内容,fengjiawen2在windwos宿主机中clone项目提交内容.update/commit/push
       这些都没什么问题.
      
     心得感受:(1)GitBlit整个搭建过程较为简单,耗时更少(不知道是因为我GitLab没有用Docker搭建还是怎么的,哎,主要是我知道要汉化,用Docker启的话启动的时候又要-v将目录映射出来拿中文包                  去覆盖,我为了简便,就没用docker启,便于汉化,但界面相比GitLab的话没有那么炫,一个蓝色基调 ps:我在亚信的项目组就用的GitBlit,难道是为了和移动的蓝色基调看起来搭                        配- -)....嗯....如果让我来给企业搭版本仓库的话我可能会选择 GitBlit(在不需要邮件通知的情况下).
              (2)在查询GitLab和GitBlit区别的时候,还看到了一些Git的可视化版本控制仓库,例如scala写的gitbucket,per写的gitolite,另外就是Go语言写的Gogs,Gogs好像好评度很高,单文件部                   署,系统资源消耗很低,我会去尝试一下的!                

     参考文章: (1)文件部署:
		https://blog.csdn.net/javagarden/article/details/83859376
               (2)Docker部署:
               https://blog.csdn.net/sanpic/article/details/81671063

     
